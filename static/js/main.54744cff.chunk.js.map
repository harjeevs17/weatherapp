{"version":3,"sources":["Component/Header.js","Component/SetCurrentWeather.js","Component/Weather.js","Component/SetDailyForcastWeather.js","Component/SetHourForcastWeather.js","Component/Foracast.js","App.js","index.js"],"names":["Header","useState","modal","setModal","toggle","className","Navbar","expand","Nav","navbar","NavItem","to","pathname","NavLink","style","cursor","onClick","Modal","isOpen","ModalHeader","ModalBody","href","ModalFooter","Button","color","getIcon","id","icon","weather","SetCurrentWeather","error","data","desc","description","max","main","temp_max","min","temp_min","city","name","current","temp","showTemperature","getCurrentWeather","a","setWeather","setLoading","Axios","get","then","result","Weather","cityName","setCityName","loading","onSubmit","event","preventDefault","type","value","onChange","e","target","placeholder","CreateCard","date","morning","day","evening","night","SetForcastWeather","daily","map","index","key","Date","dt","toDateString","Math","round","morn","eve","getDate","console","log","toLocaleString","weekday","month","hour","minute","SetHourForcastWeather","hourly","Forcast","forcastType","setForcastType","checked","SetDailyForcastWeather","App","Fragment","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VA6HeA,EA9GA,WAAO,IAAD,EACOC,oBAAS,GADhB,mBACZC,EADY,KACLC,EADK,KAEbC,EAAS,kBAAMD,GAAUD,IAC/B,OACE,kBAAC,WAAD,KACE,gCACE,yBAAKG,UAAU,wBACb,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,wBAAd,WACA,uBAAGA,UAAU,eAAb,iCAGJ,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,wBACb,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKF,UAAU,SAC5B,kBAACG,EAAA,EAAD,CAAKH,UAAU,UAAUI,QAAM,GAC7B,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAML,UAAU,WAAWM,GAAI,CAAEC,SAAU,MAA3C,SAIF,kBAACF,EAAA,EAAD,KACE,kBAAC,IAAD,CAAML,UAAU,WAAWM,GAAI,CAAEC,SAAU,aAA3C,YAIF,kBAACF,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CACER,UAAU,WACVS,MAAO,CAAEC,OAAQ,WACjBC,QAASZ,GAHX,qBAcd,kBAACa,EAAA,EAAD,CAAOC,OAAQhB,EAAOE,OAAQA,GAC5B,kBAACe,EAAA,EAAD,CAAaf,OAAQA,EAAQC,UAAU,kBACrC,+CAEF,kBAACe,EAAA,EAAD,KACE,yBAAKf,UAAU,OACb,yBAAKA,UAAU,+BACb,uBAAGA,UAAU,yBAAb,kBAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,YACZ,mDAIN,yBAAKA,UAAU,YACb,yBAAKA,UAAU,+BACb,uBAAGA,UAAU,yBAAb,eAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oBACb,6BACE,uBACEA,UAAU,wCACVgB,KAAK,0CAEL,uBAAGhB,UAAU,6CAEf,uBACEA,UAAU,sCACVgB,KAAK,kCAEL,uBAAGhB,UAAU,2CAEf,uBACEA,UAAU,yCACVgB,KAAK,kCAEL,uBAAGhB,UAAU,6CAEf,uBACEA,UAAU,sCACVgB,KAAK,4CAEL,uBAAGhB,UAAU,8CAEf,uBACEA,UAAU,wCACVgB,KAAK,yCAEL,uBAAGhB,UAAU,iDAMvB,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,kBAAkBR,QAASZ,GAAzC,aAEU,Q,gDChGpB,IAAMqB,EAAU,SAACC,GAET,IAUIC,EAVEC,EACW,yBADXA,EAEM,cAFNA,EAGG,sBAHHA,EAIG,aAJHA,EAKS,YALTA,EAMI,kBANJA,EAOK,gBAIX,QAAO,GAEH,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAU,MAALF,EACDC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EAKb,OAAOD,GAiCAE,EA9BW,SAAC,GAC1B,IAD2BD,EAC5B,EAD4BA,QAExB,GAAGA,IAAYA,EAAQE,MAAO,CAC1B,IAAIC,EAAO,CACKC,KAAOJ,EAAQA,QAAQ,GAAGK,YAC1BC,IAAMN,EAAQO,KAAKC,SACnBC,IAAMT,EAAQO,KAAKG,SACnBC,KAAOX,EAAQY,KACfC,QAAUb,EAAQO,KAAKO,KACvBf,KAAMF,EAAQG,EAAQA,QAAQ,GAAGF,KAE1Ca,EAAuCR,EAAvCQ,KAAME,EAAiCV,EAAjCU,QAASd,EAAwBI,EAAxBJ,KAAMU,EAAkBN,EAAlBM,IAAKH,EAAaH,EAAbG,IAAKF,EAAQD,EAARC,KACtC,OAEY,yBAAK3B,UAAU,mBACX,uBAAGA,UAAU,aAAakC,GAC1B,uBAAGlC,UAAU,uBAAsB,uBAAGA,UAAWsB,KACjD,uBAAGtB,UAAU,mBAAb,IAAiC2B,GACjC,uBAAG3B,UAAU,QAAb,aAA+BoC,EAAQ,0BAAMpC,UAAU,cAAhB,WAhF/D,SAAyBgC,EAAIH,GAEzB,OACI,yBAAK7B,UAAU,iDACV,yBAAKA,UAAU,YACZ,2BAAOA,UAAU,+BACb,+BACA,4BACI,4BACI,2BAAI,yCAAqB,6BAAMgC,EAAI,0BAAMhC,UAAU,cAAhB,YAEvC,4BACI,2BAAG,yCAAqB,6BAAM6B,EAAI,0BAAM7B,UAAU,cAAhB,iBAwErCsC,CAAgBN,EAAIH,IAIzC,OAAGN,GAAWA,EAAQE,MACX,uBAAGzB,UAAU,SAAUuB,EAAQE,MAA/B,OACJ,sCCvFLc,EAAiB,uCAAG,8CAAAC,EAAA,6DAAMN,EAAN,+BAAW,SAAUO,EAArB,uBAAgCC,EAAhC,gCAEjBC,IAAMC,IAAI,gDAAgDV,GACtDW,MAAK,SAAAC,GACFL,EAAWK,EAAOpB,MAClBgB,GAAW,MALD,gCAOfhB,GAPe,2CAAH,qDA6CRqB,EA3BC,WAAO,IAAD,EACcnD,mBAAS,IADvB,mBACXoD,EADW,KACDC,EADC,OAEYrD,mBAAS,MAFrB,mBAEX2B,EAFW,KAEFkB,EAFE,OAGY7C,oBAAS,GAHrB,mBAGXsD,EAHW,KAGFR,EAHE,KAIlB,OACI,kBAAC,WAAD,KACI,yBAAK1C,UAAU,aACf,0BAAMmD,SAAU,SAACC,GAAD,OAfX,SAACA,EAAOV,EAAYR,EAAMO,GACvCW,EAAMC,iBACM,KAATnB,IAEHQ,GAAW,GACXH,EAAkBL,EAAKO,EAAWC,IAUCS,CAASC,EAAMV,EAAYM,EAAUP,KAC5D,yBAAKzC,UAAU,8CACX,yBAAKA,UAAU,mCACX,2BAAOsD,KAAK,OAAOtD,UAAU,eAAeuD,MAAOP,EAAUQ,SAAU,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,OAAOH,QAAQI,YAAY,8BAEzH,yBAAK3D,UAAU,kBACX,4BACIA,UAAU,uBACVsD,KAAK,SAASjC,GAAG,UAFrB,UAOR,yBAAKrB,UAAU,kEACVkD,EAAU,6CAAsB,kBAAC,EAAD,CAAY3B,QAASA,QC3CpEH,EAAU,SAACC,GAET,IAUIC,EAVEC,EACW,yBADXA,EAEM,cAFNA,EAGG,sBAHHA,EAIG,aAJHA,EAKS,YALTA,EAMI,kBANJA,EAOK,gBAIX,QAAO,GAEH,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAU,MAALF,EACDC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EAKb,OAAOD,GAGTsC,EAAa,SAAC,GAAY,IAAXlC,EAAU,EAAVA,KACVmC,EAA2DnC,EAA3DmC,KAAKlC,EAAsDD,EAAtDC,KAAME,EAAgDH,EAAhDG,IAAKG,EAA2CN,EAA3CM,IAAK8B,EAAsCpC,EAAtCoC,QAASC,EAA6BrC,EAA7BqC,IAAKC,EAAwBtC,EAAxBsC,QAASC,EAAevC,EAAfuC,MAAO3C,EAAQI,EAARJ,KAC1D,OAAM,wCAAG,yBAAKtB,UAAU,mBACX,yBAAKA,UAAU,mBACZ,yBAAKA,UAAU,eAAc,2BAAI6D,IAChC,yBAAK7D,UAAU,0BACZ,yBAAKA,UAAU,iDACf,2BAAI2B,IAEJ,yBAAK3B,UAAU,0BACX,yBAAKA,UAAU,SACf,wBAAIA,UAAU,aAAY,uBAAGA,UAAWsB,MAExC,yBAAKtB,UAAU,SACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,kBACf,uBAAGA,UAAU,aAAb,OAA6B,6BAAMgC,EAAI,0BAAMhC,UAAU,cAAhB,YAEvC,yBAAKA,UAAU,SACf,uBAAGA,UAAU,aAAb,OAA6B,6BAAM6B,EAAI,0BAAM7B,UAAU,cAAhB,eAKnD,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,4BACX,uBAAGA,UAAU,QAAb,UAA2B,6BAAK,8BAAO8D,GAAe,0BAAM9D,UAAU,cAAhB,YAE1D,yBAAKA,UAAU,4BACX,uBAAGA,UAAU,QAAb,OAAwB,6BAAK,8BAAO+D,GAAW,0BAAM/D,UAAU,cAAhB,YAEnD,yBAAKA,UAAU,4BACX,qCAAU,6BAAK,8BAAOgE,GAAe,0BAAMhE,UAAU,cAAhB,YAEzC,yBAAKA,UAAU,cACX,uBAAGA,UAAU,QAAb,SAA0B,6BAAK,8BAAOiE,GAAa,0BAAMjE,UAAU,cAAhB,kBA8BpEkE,EArBW,SAAC,GAAe,IAAd3C,EAAa,EAAbA,QACxB,OAAGA,IAAYA,EAAQE,MAEZ,oCAAGF,EAAQ4C,MAAMC,KAAI,SAAC1C,EAAM2C,GAAP,OAAiB,kBAAC,EAAD,CACzCC,IAAKD,EACL3C,KAAM,CACFmC,KAAQ,IAAIU,KAAe,IAAV7C,EAAK8C,IAAYC,eAClC9C,KAAOD,EAAKH,QAAQ,GAAGK,YACvBC,IAAM6C,KAAKC,MAAMjD,EAAKW,KAAKR,KAC3BG,IAAM0C,KAAKC,MAAMjD,EAAKW,KAAKR,KAC3BiC,QAASY,KAAKC,MAAMjD,EAAKW,KAAKuC,MAC9BZ,QAASU,KAAKC,MAAMjD,EAAKW,KAAKwC,KAC9Bd,IAAKW,KAAKC,MAAMjD,EAAKW,KAAK0B,KAC1BE,MAAOS,KAAKC,MAAMjD,EAAKW,KAAK4B,OAC5B3C,KAAMF,EAAQM,EAAKH,QAAQ,GAAGF,WAGvCE,GAAWA,EAAQE,MACX,uBAAGzB,UAAU,SAAUuB,EAAQE,MAA/B,OACJ,sCCzGLL,EAAU,SAACC,GAET,IAUIC,EAVEC,EACW,yBADXA,EAEM,cAFNA,EAGG,sBAHHA,EAIG,aAJHA,EAKS,YALTA,EAMI,kBANJA,EAOK,gBAIX,QAAO,GAEH,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EACL,MACJ,KAAU,MAALF,EACDC,EAAKC,EACL,MACJ,KAAKF,GAAI,KAAOA,GAAI,IAChBC,EAAKC,EAKb,OAAOD,GAETwD,EAAU,SAACN,GACb,IAAIX,EAAQ,IAAIU,KAAU,IAALC,GAErB,OADAO,QAAQC,IAAInB,EAAKoB,eAAe,QAAQ,CAACC,QAAQ,QAAQC,MAAM,QAAQpB,IAAI,aACpEF,EAAKoB,eAAe,QAAQ,CAACG,KAAK,UAAUC,OAAO,YAAY,IAAIxB,EAAKoB,eAAe,QAAQ,CAACC,QAAQ,QAAQC,MAAM,QAAQpB,IAAI,aAEvIH,EAAa,SAAC,GAAY,IAAXlC,EAAU,EAAVA,KACVmC,EAAwBnC,EAAxBmC,KAAKlC,EAAmBD,EAAnBC,KAAKU,EAAcX,EAAdW,KAAMf,EAAQI,EAARJ,KACvB,OAAM,wCAAG,yBAAKtB,UAAU,mBACX,yBAAKA,UAAU,mBACZ,yBAAKA,UAAU,eAAc,2BAAI6D,IAChC,yBAAK7D,UAAU,0BACZ,yBAAKA,UAAU,iDACf,2BAAI2B,IAEJ,yBAAK3B,UAAU,sDACX,yBAAKA,UAAU,SACf,wBAAIA,UAAU,aAAY,uBAAGA,UAAWsB,MAExC,yBAAKtB,UAAU,SAEP,uBAAGA,UAAU,kBAAkBqC,EAAK,0BAAMrC,UAAU,mBAAhB,kBAyBzDsF,EAhBe,SAAC,GAAe,IAAd/D,EAAa,EAAbA,QAC5B,OAAGA,IAAYA,EAAQE,MAEZ,oCAAGF,EAAQgE,OAAOnB,KAAI,SAAC1C,EAAM2C,GAAP,OAAiB,kBAAC,EAAD,CAC1CC,IAAKD,EACL3C,KAAM,CACFmC,KAAOiB,EAAQpD,EAAK8C,IACpB7C,KAAOD,EAAKH,QAAQ,GAAGK,YACvBS,KAAOqC,KAAKC,MAAMjD,EAAKW,MACvBf,KAAMF,EAAQM,EAAKH,QAAQ,GAAGF,WAGvCE,GAAWA,EAAQE,MACX,uBAAGzB,UAAU,SAAUuB,EAAQE,MAA/B,OACJ,sCC/ELc,EAAiB,uCAAG,4CAAAC,EAAA,6DAAMN,EAAN,+BAAW,SAAUO,EAArB,uBAAgCC,EAAhC,gCACjBC,IAAMC,IAAI,wDAAwDV,GAC9DW,MAAK,SAAAC,GACFL,EAAWK,EAAOpB,MAClBgB,GAAW,MAJD,2CAAH,qDAuDR8C,EAzCC,WAAO,IAAD,EACc5F,mBAAS,IADvB,mBACXoD,EADW,KACDC,EADC,OAEYrD,mBAAS,MAFrB,mBAEX2B,EAFW,KAEFkB,EAFE,OAGY7C,oBAAS,GAHrB,mBAGXsD,EAHW,KAGFR,EAHE,OAIoB9C,oBAAS,GAJ7B,mBAIX6F,EAJW,KAIEC,EAJF,KAMlB,OACI,kBAAC,WAAD,KACI,yBAAK1F,UAAU,aACf,0BAAMmD,SAAU,SAACC,GAAD,OAhBX,SAACA,EAAOV,EAAYR,EAAMO,GACvCW,EAAMC,iBACM,KAATnB,IAEHQ,GAAW,GACXH,EAAkBL,EAAKO,EAAWC,IAWCS,CAASC,EAAMV,EAAYM,EAAUP,KAC5D,yBAAKzC,UAAU,8CACX,yBAAKA,UAAU,mCACX,2BAAOsD,KAAK,OAAOtD,UAAU,eAAeuD,MAAOP,EAAUQ,SAAU,SAAAC,GAAC,OAAIR,EAAYQ,EAAEC,OAAOH,QAAQI,YAAY,8BAEzH,yBAAK3D,UAAU,kBACX,4BACIA,UAAU,uBACVsD,KAAK,SAASjC,GAAG,UAFrB,UAMR,yBAAKrB,UAAU,mCACX,yBAAKA,UAAU,8BACX,uBAAGA,UAAU,aAAb,UACA,2BAAOA,UAAU,oBACjB,2BAAOsD,KAAK,WAAWE,SAAU,SAACC,GAAD,OAAOiC,EAAejC,EAAEC,OAAOiC,UAAUA,QAASF,IACnF,0BAAMzF,UAAU,kBAEhB,uBAAGA,UAAU,YAAb,WAGR,yBAAKA,UAAU,kEAEVkD,EACK,6CACD,CAACuC,EAAc,kBAACG,EAAD,CAAwBtB,IAAKmB,EAAalE,QAASA,IAAc,kBAAC,EAAD,CAAuB+C,IAAKmB,EAAalE,QAASA,SC9B5IsE,MAdf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,WAAWC,UAAWT,QCflDU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.54744cff.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./../dist/css/header.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  ModalFooter,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\n\r\nconst Header = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <Fragment>\r\n      <header>\r\n        <div className=\"container h-100 mt-5\">\r\n          <div className=\"row h-100 justify-content-center mx-auto\">\r\n            <div className=\"col-12 col-sm-8\">\r\n              <h1 className=\"display-4 brand-name\">Weather</h1>\r\n              <p className=\"slogan ml-2\">Your Interior Weatherman !!</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row h-100 justify-content-center align-self-center mx-auto \">\r\n            <div className=\"col-12 col-sm-8 px-0\">\r\n              <Navbar expand=\"xs\" className=\"px-0 \">\r\n                <Nav className=\"mr-auto\" navbar>\r\n                  <NavItem>\r\n                    <Link className=\"nav-item\" to={{ pathname: \"/\" }}>\r\n                      Home\r\n                    </Link>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <Link className=\"nav-item\" to={{ pathname: \"/forcast\" }}>\r\n                      Forcast\r\n                    </Link>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className=\"nav-item\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={toggle}\r\n                    >\r\n                      About Site\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </Navbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle} className=\"m-header fa-lg\">\r\n          <strong>About Site</strong>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"row\">\r\n            <div className=\"col-auto mx-auto text-muted\">\r\n              <p className=\"font-weight-bold mb-0\">Developed By</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-1\">\r\n            <div className=\"col-auto mx-auto\">\r\n              <h3 className=\"dev-name\">\r\n                <strong>Dhaval Bheda</strong>\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-3\">\r\n            <div className=\"col-auto mx-auto text-muted\">\r\n              <p className=\"font-weight-bold mb-0\">Follow Me</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-2\">\r\n            <div className=\"col-auto mx-auto\">\r\n              <div>\r\n                <a\r\n                  className=\"btn btn-social-icon btn-linkedin mr-1\"\r\n                  href=\"http://www.linkedin.com/in/dhavalbheda\"\r\n                >\r\n                  <i className=\"social-button-icon fa fa-linkedin fa-sm\"></i>\r\n                </a>\r\n                <a\r\n                  className=\"btn btn-social-icon btn-github mr-1\"\r\n                  href=\"https://github.com/dhavalbheda\"\r\n                >\r\n                  <i className=\"social-button-icon fa fa-github fa-sm\"></i>\r\n                </a>\r\n                <a\r\n                  className=\"btn btn-social-icon btn-pinterest mr-1\"\r\n                  href=\"mailto:dhavalbhedadb@gmail.com\"\r\n                >\r\n                  <i className=\"social-button-icon fa fa-envelope fa-sm\"></i>\r\n                </a>\r\n                <a\r\n                  className=\"btn btn-social-icon btn-google mr-1\"\r\n                  href=\"https://www.instagram.com/dhaval__bheda/\"\r\n                >\r\n                  <i className=\"social-button-icon fa fa-instagram fa-sm\"></i>\r\n                </a>\r\n                <a\r\n                  className=\"btn btn-social-icon btn-facebook mr-1\"\r\n                  href=\"https://www.facebook.com/dahavl.bheda\"\r\n                >\r\n                  <i className=\"social-button-icon fa fa-facebook fa-sm\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"btn btn-primary\" onClick={toggle}>\r\n            Thank You\r\n          </Button>{\" \"}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from 'react'\r\n\r\n\r\nfunction showTemperature(min,max)\r\n{\r\n    return(\r\n        <div className=\"row justify-content-center align-items-center\">\r\n             <div className=\"col-auto\">\r\n                <table className=\"table table-responsive mb-0\"> \r\n                    <tbody>      \r\n                    <tr>\r\n                        <td>\r\n                            <p ><span >Minimum</span><br/>{min}<span className=\"deg-symbol\">&#8451;</span></p>\r\n                        </td>\r\n                        <td>\r\n                            <p><span >Maximum</span><br/>{max}<span className=\"deg-symbol\">&#8451;</span></p>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>      \r\n                </table>\r\n            </div>\r\n        </div>);\r\n}\r\nconst getIcon = (id) =>\r\n    {\r\n        const weather ={\r\n            Thunderstorm:\"wi wi-day-thunderstorm\",\r\n            Drizzle:\"wi wi-sleet\",\r\n            Rain:\"wi wi-storm-showers\",\r\n            Snow:\"wi wi-snow\",\r\n            Atmosphere:\"wi wi-fog\",\r\n            Clear:\"wi wi-day-sunny\",\r\n            Clouds:\"wi wi-day-fog\"\r\n        }\r\n        \r\n        let icon;\r\n        switch(true)\r\n        {\r\n            case id>=200 && id<=232:\r\n                icon=weather.Thunderstorm;\r\n                break;\r\n            case id>=300 && id<=321:\r\n                icon=weather.Drizzle;\r\n                break;\r\n            case id>=500 && id<=531:\r\n                icon=weather.Rain;\r\n                break;\r\n            case id>=600 && id<=622:\r\n                icon=weather.Snow;\r\n                break;\r\n            case id>=701 && id<=781:\r\n                icon=weather.Atmosphere;\r\n                break;\r\n            case id===800:\r\n                icon=weather.Clear;\r\n                break;\r\n            case id>=801 && id<=804:\r\n                icon=weather.Clouds;\r\n                break;\r\n            default:\r\n                break\r\n        }       \r\n        return icon;\r\n}\r\n\r\nconst SetCurrentWeather = ({weather}) => \r\n{\r\n    if(weather && !weather.error) {\r\n        let data = {\r\n                        desc : weather.weather[0].description ,\r\n                        max : weather.main.temp_max,\r\n                        min : weather.main.temp_min,\r\n                        city : weather.name,\r\n                        current : weather.main.temp,\r\n                        icon: getIcon(weather.weather[0].id)\r\n                    }\r\n        const {city, current, icon, min, max, desc} = data\r\n        return(\r\n               \r\n                    <div className=\"col-12 d-inline\">\r\n                        <p className=\"city-name\">{city}</p>\r\n                        <p className=\"display-3 mt-4 mb-3\"><i className={icon}></i></p>\r\n                        <p className=\"text-capitalize\"> {desc}</p>\r\n                        <p className=\"pt-2\">Current : {current}<span className=\"deg-symbol\">&#8451;</span></p>\r\n\r\n                        {/* Show Min And Max Tempreture */}\r\n                        \r\n                        {showTemperature(min,max)}\r\n                    </div>\r\n        );\r\n    }\r\n    if(weather && weather.error)\r\n        return <p className=\"error\" >{weather.error} !!</p>\r\n    return <></>\r\n}\r\nexport default SetCurrentWeather","import React, { Fragment, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport './../dist/css/weather.css'\r\nimport GetWeather from './SetCurrentWeather'\r\n\r\n\r\nconst getCurrentWeather = async(city='rajkot', setWeather,setLoading) => {\r\n   let data\r\n   await Axios.get('https://dhaval-weather.herokuapp.com/weather/'+city)\r\n            .then(result => {\r\n                setWeather(result.data)\r\n                setLoading(false)\r\n            });\r\n    return data\r\n\r\n}\r\nconst onSubmit = (event, setLoading, city, setWeather) => {\r\n    event.preventDefault()\r\n    if(city === '')\r\n        return\r\n    setLoading(true)\r\n    getCurrentWeather(city,setWeather,setLoading)\r\n}\r\n\r\nconst Weather = () => {\r\n    const [cityName, setCityName] = useState('')\r\n    const [weather, setWeather] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    return( \r\n        <Fragment>\r\n            <div className=\"container\">\r\n            <form onSubmit={(event) => onSubmit(event,setLoading, cityName, setWeather)}>\r\n                <div className=\"row justify-content-center mt-sm-1 mt-md-2\">\r\n                    <div className=\"col-8 col-sm-6 pr-0 offset-sm-1\">\r\n                        <input type=\"text\" className=\"form-control\" value={cityName} onChange={e => setCityName(e.target.value)} placeholder=\"Weather Of Your City ...\"/>\r\n                    </div>\r\n                    <div className=\"col-3 col-sm-3\">\r\n                        <button \r\n                            className=\"btn btn-primary px-4\" \r\n                            type=\"submit\" id=\"button\">Get</button>\r\n                    </div>\r\n                </div>\r\n                </form>    \r\n\r\n                <div className=\"row justify-content-center align-items-center text-center mt-5\">\r\n                    {loading ? <p>Please Wait...</p>:<GetWeather weather={weather}/>}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default Weather","import React from 'react'\r\n\r\nconst getIcon = (id) =>\r\n    {\r\n        const weather ={\r\n            Thunderstorm:\"wi wi-day-thunderstorm\",\r\n            Drizzle:\"wi wi-sleet\",\r\n            Rain:\"wi wi-storm-showers\",\r\n            Snow:\"wi wi-snow\",\r\n            Atmosphere:\"wi wi-fog\",\r\n            Clear:\"wi wi-day-sunny\",\r\n            Clouds:\"wi wi-day-fog\"\r\n        }\r\n        \r\n        let icon;\r\n        switch(true)\r\n        {\r\n            case id>=200 && id<=232:\r\n                icon=weather.Thunderstorm;\r\n                break;\r\n            case id>=300 && id<=321:\r\n                icon=weather.Drizzle;\r\n                break;\r\n            case id>=500 && id<=531:\r\n                icon=weather.Rain;\r\n                break;\r\n            case id>=600 && id<=622:\r\n                icon=weather.Snow;\r\n                break;\r\n            case id>=701 && id<=781:\r\n                icon=weather.Atmosphere;\r\n                break;\r\n            case id===800:\r\n                icon=weather.Clear;\r\n                break;\r\n            case id>=801 && id<=804:\r\n                icon=weather.Clouds;\r\n                break;\r\n            default:\r\n                break\r\n        }       \r\n        return icon;\r\n}\r\n\r\nconst CreateCard = ({data}) => {\r\n    const {date,desc, max, min, morning, day, evening, night, icon} = data\r\n    return<> <div className=\"col-12 col-sm-4\">\r\n                 <div className=\"card mb-3 mw-25\" >\r\n                    <div className=\"card-header\"><p>{date}</p></div>\r\n                     <div className=\"card-body text-primary\">\r\n                        <div className=\"row align-items-center justify-content-center\">\r\n                        <p>{desc}</p>\r\n                        </div>\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col-4\">\r\n                            <h1 className=\"display-3\"><i className={icon}></i></h1>\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-5 offset-2\">\r\n                                    <p className=\"card-text\">Min <br/>{min}<span className=\"deg-symbol\">&#8451;</span></p>\r\n                                    </div>\r\n                                    <div className=\"col-5\">\r\n                                    <p className=\"card-text\">Max <br/>{max}<span className=\"deg-symbol\">&#8451;</span></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row align-items-center card-foot mt-4\">\r\n                            <div className=\"col-3 custom-border px-0\">\r\n                                <p className=\"mr-2\">Morgin <br/><span>{morning}</span><span className=\"deg-symbol\">&#8451;</span></p>\r\n                            </div>\r\n                            <div className=\"col-3 custom-border px-0\">\r\n                                <p className=\"mr-2\">Day <br/><span>{day}</span><span className=\"deg-symbol\">&#8451;</span></p>\r\n                            </div>\r\n                            <div className=\"col-3 custom-border px-0\">\r\n                                <p>Evning <br/><span>{evening}</span><span className=\"deg-symbol\">&#8451;</span></p>\r\n                            </div>\r\n                            <div className=\"col-3 px-0\">\r\n                                <p className=\"mr-2\">Night <br/><span>{night}</span><span className=\"deg-symbol\">&#8451;</span></p>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n                </div>\r\n             </div>\r\n    </> \r\n}\r\n\r\nconst SetForcastWeather = ({weather}) => {\r\n    if(weather && !weather.error)\r\n    {\r\n        return <>{weather.daily.map((data, index) => <CreateCard \r\n            key={index}\r\n            data={{\r\n                date : (new Date(data.dt * 1000)).toDateString(),\r\n                desc : data.weather[0].description ,\r\n                max : Math.round(data.temp.max),\r\n                min : Math.round(data.temp.max),\r\n                morning: Math.round(data.temp.morn),\r\n                evening: Math.round(data.temp.eve),\r\n                day: Math.round(data.temp.day),\r\n                night: Math.round(data.temp.night),\r\n                icon: getIcon(data.weather[0].id)\r\n            }} />)}</>\r\n    }\r\n    if(weather && weather.error)\r\n        return <p className=\"error\" >{weather.error} !!</p>\r\n    return <></>\r\n}\r\nexport default SetForcastWeather","import React from 'react'\r\n\r\nconst getIcon = (id) =>\r\n    {\r\n        const weather ={\r\n            Thunderstorm:\"wi wi-day-thunderstorm\",\r\n            Drizzle:\"wi wi-sleet\",\r\n            Rain:\"wi wi-storm-showers\",\r\n            Snow:\"wi wi-snow\",\r\n            Atmosphere:\"wi wi-fog\",\r\n            Clear:\"wi wi-day-sunny\",\r\n            Clouds:\"wi wi-day-fog\"\r\n        }\r\n        \r\n        let icon;\r\n        switch(true)\r\n        {\r\n            case id>=200 && id<=232:\r\n                icon=weather.Thunderstorm;\r\n                break;\r\n            case id>=300 && id<=321:\r\n                icon=weather.Drizzle;\r\n                break;\r\n            case id>=500 && id<=531:\r\n                icon=weather.Rain;\r\n                break;\r\n            case id>=600 && id<=622:\r\n                icon=weather.Snow;\r\n                break;\r\n            case id>=701 && id<=781:\r\n                icon=weather.Atmosphere;\r\n                break;\r\n            case id===800:\r\n                icon=weather.Clear;\r\n                break;\r\n            case id>=801 && id<=804:\r\n                icon=weather.Clouds;\r\n                break;\r\n            default:\r\n                break\r\n        }       \r\n        return icon;\r\n}\r\nconst getDate = (dt) => {\r\n    let date = (new Date(dt * 1000))\r\n    console.log(date.toLocaleString(\"en-us\",{weekday:'short',month:'short',day:'2-digit'}))\r\n    return date.toLocaleString(\"en-us\",{hour:'numeric',minute:'numeric'})+\" \"+date.toLocaleString(\"en-us\",{weekday:'short',month:'short',day:'2-digit'})\r\n}\r\nconst CreateCard = ({data}) => {\r\n    const {date,desc,temp, icon} = data\r\n    return<> <div className=\"col-12 col-sm-4\">\r\n                 <div className=\"card mb-3 mw-25\" >\r\n                    <div className=\"card-header\"><p>{date}</p></div>\r\n                     <div className=\"card-body text-primary\">\r\n                        <div className=\"row align-items-center justify-content-center\">\r\n                        <p>{desc}</p>\r\n                        </div>\r\n                        <div className=\"row align-items-center justify-content-center mt-2\">\r\n                            <div className=\"col-4\">\r\n                            <h1 className=\"display-3\"><i className={icon}></i></h1>\r\n                            </div>\r\n                            <div className=\"col-5\">\r\n                                    {/* <p className=\"card-text\">Temprature </p> */}\r\n                                    <p className=\"hour-card-temp\">{temp}<span className=\"hour-deg-symbol\">&#8451;</span></p>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n                </div>\r\n             </div>\r\n    </> \r\n}\r\n\r\nconst SetHourForcastWeather = ({weather}) => {\r\n    if(weather && !weather.error)\r\n    {\r\n        return <>{weather.hourly.map((data, index) => <CreateCard \r\n            key={index}\r\n            data={{\r\n                date : getDate(data.dt),\r\n                desc : data.weather[0].description ,\r\n                temp : Math.round(data.temp),\r\n                icon: getIcon(data.weather[0].id)\r\n            }} />)}</>\r\n    }\r\n    if(weather && weather.error)\r\n        return <p className=\"error\" >{weather.error} !!</p>\r\n    return <></>\r\n}\r\nexport default SetHourForcastWeather","import React, { Fragment, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport './../dist/css/weather.css'\r\nimport SetDailyForcastWeather from './SetDailyForcastWeather'\r\nimport SetHourForcastWeather from './SetHourForcastWeather'\r\n\r\n\r\nconst getCurrentWeather = async(city='rajkot', setWeather,setLoading) => {\r\n   await Axios.get('https://dhaval-weather.herokuapp.com/weather/forcast/'+city)\r\n            .then(result => {\r\n                setWeather(result.data)\r\n                setLoading(false)\r\n            });\r\n}\r\nconst onSubmit = (event, setLoading, city, setWeather) => {\r\n    event.preventDefault()\r\n    if(city === '')\r\n        return\r\n    setLoading(true)\r\n    getCurrentWeather(city,setWeather,setLoading)\r\n}\r\nconst Forcast = () => {\r\n    const [cityName, setCityName] = useState('')\r\n    const [weather, setWeather] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [forcastType, setForcastType] = useState(true)\r\n\r\n    return( \r\n        <Fragment>\r\n            <div className=\"container\">\r\n            <form onSubmit={(event) => onSubmit(event,setLoading, cityName, setWeather)}>\r\n                <div className=\"row justify-content-center mt-sm-1 mt-md-2\">\r\n                    <div className=\"col-8 col-sm-6 pr-0 offset-sm-1\">\r\n                        <input type=\"text\" className=\"form-control\" value={cityName} onChange={e => setCityName(e.target.value)} placeholder=\"Weather Of Your City ...\"/>\r\n                    </div>\r\n                    <div className=\"col-3 col-sm-3\">\r\n                        <button \r\n                            className=\"btn btn-primary px-4\" \r\n                            type=\"submit\" id=\"button\">Get</button>\r\n                    </div>                \r\n                </div>\r\n            </form>\r\n                <div className=\"row mt-3 justify-content-center\">\r\n                    <div className=\"col-9 col-sm-6 offset-sm-6\">\r\n                        <p className=\" d-inline\">Hourly</p>\r\n                        <label className=\"switch mx-2 mt-2\">\r\n                        <input type=\"checkbox\" onChange={(e) => setForcastType(e.target.checked)} checked={forcastType}/>\r\n                        <span className=\"slider round\"></span>\r\n                        </label>\r\n                        <p className=\"d-inline\">Daily</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center align-items-center text-center mt-5\">\r\n                    \r\n                    {loading \r\n                        ? <p>Please Wait...</p>\r\n                        :[forcastType ? <SetDailyForcastWeather key={forcastType} weather={weather} /> : <SetHourForcastWeather key={forcastType} weather={weather}/> ]}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default Forcast","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"weather-icons/css/weather-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"bootstrap-social/bootstrap-social.css\";\r\n\r\nimport Header from \"./Component/Header\";\r\nimport Weather from \"./Component/Weather\";\r\nimport Forcast from \"./Component/Foracast\";\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Weather}></Route>\r\n          <Route exact path=\"/forcast\" component={Forcast}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}